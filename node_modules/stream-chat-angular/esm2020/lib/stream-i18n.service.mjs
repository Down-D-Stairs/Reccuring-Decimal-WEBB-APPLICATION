import { Injectable } from '@angular/core';
import { en } from '../assets/i18n/en';
import * as i0 from "@angular/core";
import * as i1 from "@ngx-translate/core";
/**
 * The `StreamI18nService` can be used to customize the labels of the chat UI. Our [translation guide](../concepts/translation.mdx) covers this topic in detail.
 */
export class StreamI18nService {
    constructor(translteService) {
        this.translteService = translteService;
    }
    /**
     * Registers the translation to the [ngx-translate](https://github.com/ngx-translate/core) TranslateService.
     * @param lang The language key to register the translation to
     * @param overrides An object which keys are translation keys, and the values are custom translations
     */
    setTranslation(lang = 'en', overrides) {
        if (!this.translteService.defaultLang) {
            this.translteService.defaultLang = lang;
        }
        this.translteService.setTranslation(lang, { streamChat: { ...en.streamChat, ...overrides } }, true);
    }
}
StreamI18nService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "15.0.4", ngImport: i0, type: StreamI18nService, deps: [{ token: i1.TranslateService }], target: i0.ɵɵFactoryTarget.Injectable });
StreamI18nService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: "12.0.0", version: "15.0.4", ngImport: i0, type: StreamI18nService, providedIn: 'root' });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "15.0.4", ngImport: i0, type: StreamI18nService, decorators: [{
            type: Injectable,
            args: [{
                    providedIn: 'root',
                }]
        }], ctorParameters: function () { return [{ type: i1.TranslateService }]; } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3RyZWFtLWkxOG4uc2VydmljZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3Byb2plY3RzL3N0cmVhbS1jaGF0LWFuZ3VsYXIvc3JjL2xpYi9zdHJlYW0taTE4bi5zZXJ2aWNlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxVQUFVLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFFM0MsT0FBTyxFQUFFLEVBQUUsRUFBRSxNQUFNLG1CQUFtQixDQUFDOzs7QUFFdkM7O0dBRUc7QUFJSCxNQUFNLE9BQU8saUJBQWlCO0lBQzVCLFlBQW9CLGVBQWlDO1FBQWpDLG9CQUFlLEdBQWYsZUFBZSxDQUFrQjtJQUFHLENBQUM7SUFFekQ7Ozs7T0FJRztJQUNILGNBQWMsQ0FBQyxJQUFJLEdBQUcsSUFBSSxFQUFFLFNBQXFDO1FBQy9ELElBQUksQ0FBQyxJQUFJLENBQUMsZUFBZSxDQUFDLFdBQVcsRUFBRTtZQUNyQyxJQUFJLENBQUMsZUFBZSxDQUFDLFdBQVcsR0FBRyxJQUFJLENBQUM7U0FDekM7UUFDRCxJQUFJLENBQUMsZUFBZSxDQUFDLGNBQWMsQ0FDakMsSUFBSSxFQUNKLEVBQUUsVUFBVSxFQUFFLEVBQUUsR0FBRyxFQUFFLENBQUMsVUFBVSxFQUFFLEdBQUcsU0FBUyxFQUFFLEVBQUUsRUFDbEQsSUFBSSxDQUNMLENBQUM7SUFDSixDQUFDOzs4R0FqQlUsaUJBQWlCO2tIQUFqQixpQkFBaUIsY0FGaEIsTUFBTTsyRkFFUCxpQkFBaUI7a0JBSDdCLFVBQVU7bUJBQUM7b0JBQ1YsVUFBVSxFQUFFLE1BQU07aUJBQ25CIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSW5qZWN0YWJsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgVHJhbnNsYXRlU2VydmljZSB9IGZyb20gJ0BuZ3gtdHJhbnNsYXRlL2NvcmUnO1xuaW1wb3J0IHsgZW4gfSBmcm9tICcuLi9hc3NldHMvaTE4bi9lbic7XG5cbi8qKlxuICogVGhlIGBTdHJlYW1JMThuU2VydmljZWAgY2FuIGJlIHVzZWQgdG8gY3VzdG9taXplIHRoZSBsYWJlbHMgb2YgdGhlIGNoYXQgVUkuIE91ciBbdHJhbnNsYXRpb24gZ3VpZGVdKC4uL2NvbmNlcHRzL3RyYW5zbGF0aW9uLm1keCkgY292ZXJzIHRoaXMgdG9waWMgaW4gZGV0YWlsLlxuICovXG5ASW5qZWN0YWJsZSh7XG4gIHByb3ZpZGVkSW46ICdyb290Jyxcbn0pXG5leHBvcnQgY2xhc3MgU3RyZWFtSTE4blNlcnZpY2Uge1xuICBjb25zdHJ1Y3Rvcihwcml2YXRlIHRyYW5zbHRlU2VydmljZTogVHJhbnNsYXRlU2VydmljZSkge31cblxuICAvKipcbiAgICogUmVnaXN0ZXJzIHRoZSB0cmFuc2xhdGlvbiB0byB0aGUgW25neC10cmFuc2xhdGVdKGh0dHBzOi8vZ2l0aHViLmNvbS9uZ3gtdHJhbnNsYXRlL2NvcmUpIFRyYW5zbGF0ZVNlcnZpY2UuXG4gICAqIEBwYXJhbSBsYW5nIFRoZSBsYW5ndWFnZSBrZXkgdG8gcmVnaXN0ZXIgdGhlIHRyYW5zbGF0aW9uIHRvXG4gICAqIEBwYXJhbSBvdmVycmlkZXMgQW4gb2JqZWN0IHdoaWNoIGtleXMgYXJlIHRyYW5zbGF0aW9uIGtleXMsIGFuZCB0aGUgdmFsdWVzIGFyZSBjdXN0b20gdHJhbnNsYXRpb25zXG4gICAqL1xuICBzZXRUcmFuc2xhdGlvbihsYW5nID0gJ2VuJywgb3ZlcnJpZGVzPzogeyBba2V5OiBzdHJpbmddOiBzdHJpbmcgfSkge1xuICAgIGlmICghdGhpcy50cmFuc2x0ZVNlcnZpY2UuZGVmYXVsdExhbmcpIHtcbiAgICAgIHRoaXMudHJhbnNsdGVTZXJ2aWNlLmRlZmF1bHRMYW5nID0gbGFuZztcbiAgICB9XG4gICAgdGhpcy50cmFuc2x0ZVNlcnZpY2Uuc2V0VHJhbnNsYXRpb24oXG4gICAgICBsYW5nLFxuICAgICAgeyBzdHJlYW1DaGF0OiB7IC4uLmVuLnN0cmVhbUNoYXQsIC4uLm92ZXJyaWRlcyB9IH0sXG4gICAgICB0cnVlXG4gICAgKTtcbiAgfVxufVxuIl19